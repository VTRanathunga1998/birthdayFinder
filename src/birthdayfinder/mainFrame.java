
package birthdayfinder;

import static java.lang.Integer.parseInt;
import javax.swing.JOptionPane;

public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNIC = new javax.swing.JTextField();
        lblBirthday = new javax.swing.JLabel();
        lblMaleOrFemale = new javax.swing.JLabel();
        btnGen = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        txtNewNIC = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/4f6435f74f67d6aedc85c81d373f97ca--sri-lanka-flag-easy-to-use-removebg-preview.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 360, 200));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("V");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 260, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("Birthday");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setText("Male Or Female");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 500, -1, -1));

        txtNIC.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        txtNIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNICKeyPressed(evt);
            }
        });
        jPanel1.add(txtNIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, 220, -1));

        lblBirthday.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jPanel1.add(lblBirthday, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 410, 390, 50));

        lblMaleOrFemale.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jPanel1.add(lblMaleOrFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 500, 390, 50));

        btnGen.setBackground(new java.awt.Color(255, 51, 51));
        btnGen.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnGen.setForeground(new java.awt.Color(255, 255, 0));
        btnGen.setText("Generate");
        btnGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenActionPerformed(evt);
            }
        });
        jPanel1.add(btnGen, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 600, 210, 50));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setText("Enter NIC");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, -1));

        btnClear.setBackground(new java.awt.Color(255, 51, 51));
        btnClear.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 0));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 600, 210, 50));

        txtNewNIC.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        txtNewNIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNewNICKeyPressed(evt);
            }
        });
        jPanel1.add(txtNewNIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, 280, 50));

        jLabel6.setText("New Fomat");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 320, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setText("OR");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 260, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 670));

        setSize(new java.awt.Dimension(860, 724));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenActionPerformed
        String nic;
        String year;
        int day;
        String gender;
        String month;
        int date;
        int days;
        
        if(txtNewNIC.getText().trim().isEmpty() && txtNIC.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "The fields cannot be empty");
        }else if(!(txtNewNIC.getText().trim().isEmpty()) && txtNIC.getText().trim().isEmpty()){
            nic=txtNewNIC.getText();
            year = String.valueOf(nic.charAt(0)) + String.valueOf(nic.charAt(1)) + String.valueOf(nic.charAt(2)) + String.valueOf(nic.charAt(3));
        
            day = parseInt(String.valueOf(nic.charAt(4)) + String.valueOf(nic.charAt(5)) +String.valueOf(nic.charAt(6)));
        
        
            if(day>500){
                day=day-500;
                gender = "Female";
                lblMaleOrFemale.setText(gender);
                if(day<31){
                    month = "January";
                    date = day;
                }else if(day<60){
                    month="February";
                    date = day - 31;
                }else if(day<91){
                    month="March";
                    date = day - 60;
                }else if(day<121){
                    month="April";
                    date = day - 91;
                }else if(day<152){
                    month="May";
                    date = day - 121;
                }else if(day<182){
                    month="June";
                    date = day - 152;
                }else if(day<213){
                    month="July";
                    date = day - 182;
                }else if(day<244){
                    month="August";
                    date = day - 213;
                }else if(day<274){
                    month="September";
                    date = day- 244;
                }else if(day<305){
                    month="October";
                    date = day - 274;
                }else if(day<335){
                    month="November";
                    date = day - 274;
                }else{
                    month="December";
                    date = day - 335;
                }

                if(lblMaleOrFemale.equals("Female")){
                    lblBirthday.setText("19"+year+"/" + month +"/"+ date);
                }else{
                    lblBirthday.setText("19"+year+"/" + month +"/"+ date);
                }
            }else{
                gender="Male";
                lblMaleOrFemale.setText(gender);
                if(day<31){
                    month = "January";
                    date = day;
                    }else if(day<60){
                        month="February";
                        date = day - 31;
                    }else if(day<91){
                        month="March";
                        date = day - 60;
                    }else if(day<121){
                        month="April";
                        date = day - 91;
                    }else if(day<152){
                        month="May";
                        date = day - 121;
                    }else if(day<182){
                        month="June";
                        date = day - 152;
                    }else if(day<213){
                        month="July";
                        date = day - 182;
                    }else if(day<244){
                        month="August";
                        date = day - 213;
                    }else if(day<274){
                        month="September";
                        date = day - 244;
                    }else if(day<305){
                        month="October";
                        date = day - 274;
                    }else if(day<335){
                        month="November";
                        date = day - 274;
                    }else{
                        month="December";
                        date = day - 335;
                    }

                    if(lblMaleOrFemale.equals("Female")){
                        lblBirthday.setText(year+"/" + month +"/"+ date);
                    }else{
                        lblBirthday.setText(year+"/" + month +"/"+ date);
                    }
            }
            
        }else if(txtNewNIC.getText().trim().isEmpty() && !(txtNIC.getText().trim().isEmpty())){
            nic=txtNIC.getText();
            year = String.valueOf(nic.charAt(0)) + String.valueOf(nic.charAt(1));
        
            day = parseInt(String.valueOf(nic.charAt(2)) + String.valueOf(nic.charAt(3)) +String.valueOf(nic.charAt(4)));
        
        
            if(day>500){
                day=day-500;
                gender = "Female";
                lblMaleOrFemale.setText(gender);
                if(day<31){
                    month = "January";
                    date = day;
                }else if(day<60){
                    month="February";
                    date = day - 31;
                }else if(day<91){
                    month="March";
                    date = day - 60;
                }else if(day<121){
                    month="April";
                    date = day - 91;
                }else if(day<152){
                    month="May";
                    date = day - 121;
                }else if(day<182){
                    month="June";
                    date = day - 152;
                }else if(day<213){
                    month="July";
                    date = day - 182;
                }else if(day<244){
                    month="August";
                    date = day - 213;
                }else if(day<274){
                    month="September";
                    date = day- 244;
                }else if(day<305){
                    month="October";
                    date = day - 274;
                }else if(day<335){
                    month="November";
                    date = day - 274;
                }else{
                    month="December";
                    date = day - 335;
                }

                if(lblMaleOrFemale.equals("Female")){
                    lblBirthday.setText("19"+year+"/" + month +"/"+ date);
                }else{
                    lblBirthday.setText("19"+year+"/" + month +"/"+ date);
                }
            }else{
                gender="Male";
                lblMaleOrFemale.setText(gender);
                if(day<31){
                    month = "January";
                    date = day;
                    }else if(day<60){
                        month="February";
                        date = day - 31;
                    }else if(day<91){
                        month="March";
                        date = day - 60;
                    }else if(day<121){
                        month="April";
                        date = day - 91;
                    }else if(day<152){
                        month="May";
                        date = day - 121;
                    }else if(day<182){
                        month="June";
                        date = day - 152;
                    }else if(day<213){
                        month="July";
                        date = day - 182;
                    }else if(day<244){
                        month="August";
                        date = day - 213;
                    }else if(day<274){
                        month="September";
                        date = day - 244;
                    }else if(day<305){
                        month="October";
                        date = day - 274;
                    }else if(day<335){
                        month="November";
                        date = day - 274;
                    }else{
                        month="December";
                        date = day - 335;
                    }

                    if(lblMaleOrFemale.equals("Female")){
                        lblBirthday.setText("19"+year+"/" + month +"/"+ date);
                    }else{
                        lblBirthday.setText("19"+year+"/" + month +"/"+ date);
                    }
            }
            }else{
                JOptionPane.showMessageDialog(null, "At least one field shoud be empty");
                txtNIC.setText("");
                txtNewNIC.setText("");
            }
        
        
        
        
        
    }//GEN-LAST:event_btnGenActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtNIC.setText("");
        lblBirthday.setText("");
        lblMaleOrFemale.setText("");
        txtNewNIC.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtNICKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNICKeyPressed
        char c = evt.getKeyChar();
        String nic = txtNIC.getText();
        int len = nic.length();
        if(Character.isLetter(c)){
            txtNIC.setEditable(false);
        }else{
            txtNIC.setEditable(true);
            if(len<9){
                txtNIC.setEditable(true);
            }else{
                txtNIC.setEditable(false);
            }
        }
        

    }//GEN-LAST:event_txtNICKeyPressed

    private void txtNewNICKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewNICKeyPressed
        char c = evt.getKeyChar();
        String nic = txtNewNIC.getText();
        int len = nic.length();
        if(Character.isLetter(c)){
            txtNewNIC.setEditable(false);
        }else{
            txtNewNIC.setEditable(true);
            if(len<12){
                txtNewNIC.setEditable(true);
            }else{
                txtNewNIC.setEditable(false);
            }
        }
        
        
    }//GEN-LAST:event_txtNewNICKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnGen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblBirthday;
    private javax.swing.JLabel lblMaleOrFemale;
    private javax.swing.JTextField txtNIC;
    private javax.swing.JTextField txtNewNIC;
    // End of variables declaration//GEN-END:variables
}
